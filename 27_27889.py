# Тип 27 № 27889 Добавить в вариант Имеется  набор данных, состоящий из пар положительных целых чисел.Необходимо выбрать из каждой пары ровно одно число так, чтобы сумма всех выбранных чисел не делилась на 3 и при этом была минимально возможной.Гарантируется, что искомую сумму получить можно.Программа должна напечатать одно число — минимально возможную сумму, соответствующую условиям задачи.
# Входные данные.
#  Файл A Файл B
# Даны два входных файла(файл A и файл B), каждый из которых содержит в первой строке количество пар
#  (1≤N≤100000).Каждая из следующих N строк содержит два натуральных числа, не превышающих 10 000.
# Пример организации исходных данных во входном файле:
# 6
#  1 3
#  5 12
#  6 9
#  5 4
#  3 3
#  1 1
# Для указанных входных данных значением искомой суммы должно быть число 20.
# В ответе укажите два числа: сначала значение искомой суммы для файла А, затем для файла B.
#
# Предупреждение: для обработки nфайла B не следует использовать переборный алгоритм, вычисляющий сумму для всех возможных вариантов, поскольку написанная по такому алгоритму программа будет выполняться слишком долго.

f = open('27-B_demo.txt')
n = int(f.readline())
s = 0
minn = 20001
d = 0
for i in range(n):
    x, y = map(int, f.readline().split())
    s += min(x, y)
    d = abs(x-y)
    if d % 3 != 0:
        minn = min(d, minn)
if s % 3 !=0:
    print(s)
else:
    print(s+minn)
f.close()
